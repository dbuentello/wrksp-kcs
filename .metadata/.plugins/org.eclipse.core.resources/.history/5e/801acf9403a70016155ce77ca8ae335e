<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:servicenow="http://www.mulesoft.org/schema/mule/servicenow"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/servicenow http://www.mulesoft.org/schema/mule/servicenow/current/mule-servicenow.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
    <http:listener-config name="incident-api-httpListenerConfig" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration"/>
    <apikit:config name="incident-api-config" raml="incident-api.raml" consoleEnabled="false" doc:name="Router"/>
    <servicenow:config name="ServiceNow__Basic_Configuration" username="${servicenow.username}" password="${servicenow.password}" serviceAddress="${servicenow.address}" serviceNowVersion="GENEVA" doc:name="ServiceNow: Basic Configuration"/>
    <flow name="incident-api-main">
        <http:listener config-ref="incident-api-httpListenerConfig" path="/api/*" doc:name="HTTP"/>
        <apikit:router config-ref="incident-api-config" doc:name="APIkit Router"/>
        <exception-strategy ref="incident-api-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="incident-api-console">
        <http:listener config-ref="incident-api-httpListenerConfig" path="/console/*" doc:name="HTTP"/>
        <apikit:console config-ref="incident-api-config" doc:name="APIkit Console"/>
    </flow>
    <flow name="incident-apiFlow">
        <http:listener config-ref="incident-api-httpListenerConfig" path="/incident/search" allowedMethods="POST" doc:name="HTTP /incident/search"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http://www.service-now.com/incident
---
{
	ns0#getRecords: {
		"__encoded_query": "active=true^sys_created_on>javascript:gs.endOfLastWeek()",
		"__order_by_desc": "sys_created_on"
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <servicenow:invoke config-ref="ServiceNow__Basic_Configuration" type="incident||getRecords" doc:name="ServiceNow"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http://www.service-now.com/incident
---
incident: {
   id: payload.getRecordsResponse.getRecordsResult.sys_id,
   number: payload.getRecordsResponse.getRecordsResult.number,
   caller: payload.getRecordsResponse.getRecordsResult.caller_id,
   short_description: payload.getRecordsResponse.getRecordsResult.short_description,
   priority: payload.getRecordsResponse.getRecordsResult.priority,
   category: payload.getRecordsResponse.getRecordsResult.category,
   description: payload.getRecordsResponse.getRecordsResult.description
}]]></dw:set-payload>
        </dw:transform-message>
        <logger message="*** payload.getRecordsResponse.getRecordsResult.sys_id" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="incident-apiFlow1">
        <http:listener config-ref="incident-api-httpListenerConfig" path="/test/{id}" allowedMethods="PUT" doc:name="HTTP /test/{id}"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:input-payload mimeType="application/json"/>
        	<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <logger message="message.inboundProperties.http.request.uri = #[message.inboundProperties.'http.uri.params'.id]" level="INFO" doc:name="Logger1"/>
        <logger message="payload.short_description #[message.payload.short_description]" level="INFO" doc:name="Logger2"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
---
update: {
		short_description: payload.short_description
	}
]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    
        <flow name="put:/incident/{sys_id}">
        <http:listener config-ref="incident-api-httpListenerConfig" path="/incident/{sys_id}" allowedMethods="PUT" doc:name="HTTP /incident/{sys_id}"/>
        <set-variable variableName="sys_id" value="#[message.inboundProperties.'http.uri.params'.sys_id]" doc:name="Set Var sys_id"/>
        <logger message="Incoming sys_id: #[flowVars.sys_id] and payload.short_description #[payload.short_description]" level="INFO" doc:name="Logger"/>
        <dw:transform-message doc:name="Transform Message">
        	<dw:input-payload />
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http://www.service-now.com/incident
---
{
	ns0#update: {
		sys_id: flowVars.sys_id,
		short_description: payload.short_description
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <servicenow:invoke config-ref="ServiceNow__Basic_Configuration" type="incident||update" doc:name="ServiceNow"/>
        <dw:transform-message metadata:id="08f01725-58ff-4f04-9f7c-c5bd166342c3" doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
%namespace ns0 http://www.service-now.com/incident
---
{
	sys_id: payload.updateResponse.sys_id
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    
    
    <flow name="get:/incident/{number}:incident-api-config">
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http://www.service-now.com/incident
---
{
	ns0#getRecords: {
		number: flowVars.number
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <servicenow:invoke config-ref="ServiceNow__Basic_Configuration" type="incident||getRecords" doc:name="ServiceNow"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
%namespace ns0 http://www.service-now.com/incident
---
{
   id: payload.getRecordsResponse.getRecordsResult.sys_id,
   number: payload.getRecordsResponse.getRecordsResult.number,
   caller: payload.getRecordsResponse.getRecordsResult.caller_id,
   short_description: payload.getRecordsResponse.getRecordsResult.short_description,
   priority: payload.getRecordsResponse.getRecordsResult.priority,
   category: payload.getRecordsResponse.getRecordsResult.category,
   description: payload.getRecordsResponse.getRecordsResult.description
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="post:/incident:application/json:incident-api-config">
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http://www.service-now.com/incident
---
{
	insert: {
		caller_id: payload.caller,
		category: payload.category,
		description: payload.description,
		priority: payload.priority,
		short_description: payload.short_description,
		state: payload.state
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <servicenow:invoke config-ref="ServiceNow__Basic_Configuration" type="incident||insert" doc:name="ServiceNow"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
%namespace ns0 http://www.service-now.com/incident
---
{
	id: payload.insertResponse.sys_id,
	number: payload.insertResponse.number
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    
    
    <apikit:mapping-exception-strategy name="incident-api-apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
</mule>
